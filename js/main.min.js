/* Jacob Perez <https://jacobxperez.github.io/blog/>
 * Copyright (C) 2022 Jacob Perez <jacobxperez@gmx.com>
 * Licensed under the Apache License, Version 2.0
 * http://www.apache.org/licenses/LICENSE-2.0
------------------------------------------------------------------------------*/
"localhost"===location.hostname||"127.0.0.1"===location.hostname?baseURL=window.location.origin:baseURL=window.location.origin+"/blog";var parser=new DOMParser,Data={title:document.title,subTitle:null,author:document.querySelector("[name=author]").content};const dropDown=()=>{const getToggle=document.querySelectorAll("[data-toggle]"),getPop=document.querySelectorAll('[data-toggle="pop"]'),getToolTip=document.querySelectorAll("[data-tooltip]");for(let i=0;i<getToggle.length;i++)getToggle[i].addEventListener("click",(function(e){!1===this.hasAttribute("data-state","active")?this.setAttribute("data-state","active"):!0===this.hasAttribute("data-state","active")&&this.removeAttribute("data-state"),e.stopPropagation()}));for(let i=0;i<getToolTip.length;i++)getToolTip[i].addEventListener("click",(function(e){!1===this.hasAttribute("data-state","active")?this.setAttribute("data-state","active"):!0===this.hasAttribute("data-state","active")&&this.removeAttribute("data-state"),e.stopPropagation()}));document.addEventListener("click",(function(e){for(let i=0;i<getPop.length;i++)e.target!==getPop[i]&&getPop[i].removeAttribute("data-state");for(let i=0;i<getToolTip.length;i++)e.target!==getToolTip[i]&&getToolTip[i].removeAttribute("data-state")}))};class Template{getTemplate(parseSource,targetSelector){const getTemplate_=document.getElementById(parseSource).content,importTemplate_=document.importNode(getTemplate_,!0);document.getElementById(targetSelector).appendChild(importTemplate_)}getFromString(parseSource,parseSelector,targetSelector){const parseSource_=parser.parseFromString(parseSource,"text/html"),getParseSelector_=parseSource_.getElementById(parseSelector),getTargetSelector_=document.getElementById(targetSelector);getTargetSelector_.appendChild(getParseSelector_)}fetchTemplate(parseSource,parseSelector,targetSelector){fetch(baseURL+parseSource).then(response=>response.text()).then(html=>{const parseSource_=parser.parseFromString(html,"text/html"),getParseSelector_=parseSource_.getElementById(parseSelector),cloneParseSelector_=getParseSelector_.content.cloneNode(!0),targetSelector_=document.getElementById(targetSelector);targetSelector_.appendChild(cloneParseSelector_)}).catch(err=>{console.log("Error: faild to catch template",err)}).finally(()=>{"footerTemplate"===parseSelector&&dropDown()})}}document.addEventListener("DOMContentLoaded",()=>{if(null===Data.subTitle)var headerContent=`\n            <div id="headerContent" data-container="fit">\n                <h1>${Data.title}</h1>\n            </div>\n            `;else var headerContent=`\n            <div id="headerContent" data-container="fit">\n                <h1>${Data.title}</h1>\n                <h2 data-text="h5">${Data.subTitle}</h2>\n            </div>\n            `;const PageLayout=new Template;PageLayout.getFromString(`\n    <article id="layout">\n        <header id="header" data-section="header">\n            ${headerContent}\n        </header>\n\n        <main id="main" data-section="main">\n            <div id="content" data-container="fit" data-grid="main">\n            </div>\n        </main>\n\n        <footer id="footer" data-section="footer">\n            <div id="footerContent" data-container="fit">\n            </div>\n        </footer>\n    <article>\n    `,"layout","page");const PageContent=new Template;PageContent.getTemplate("template","content");const NavTemplate=new Template;NavTemplate.fetchTemplate("/templates/main.html","navTemplate","header");const FooterTemplate=new Template;FooterTemplate.fetchTemplate("/templates/main.html","footerTemplate","footerContent")});
